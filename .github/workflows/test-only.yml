name: Jepsen tests (no setup)
on:
  workflow_call:
    inputs:
      workloads:
        type: string
        required: true
      nemeses:
        type: string
        required: true
      disk:
        type: string
        required: true

jobs:
  strategy:
    fail-fast: false
    matrix:
      workload: ${{ fromJSON(inputs.workloads) }}
      nemesis: ${{ fromJSON(inputs.nemeses) }}
      disk: ${{ fromJSON(inputs.disk) }}

  test:
    steps:
    - name: Test
      timeout-minutes: 8
      run: |
        sudo ./resources/network.sh setup 5
        if test ${{ matrix.workload }} = set; then echo 180 >time-limit; else echo 240 >time-limit; fi
        lein run test --no-ssh --binary $(pwd)/resources/app \
          --workload ${{ matrix.workload }} \
          --nemesis ${{ matrix.nemesis }} \
          --rate 100 \
          --time-limit $(cat time-limit) \
          --disk ${{ matrix.disk }} \
          ${{ inputs.cli-opts }}
        sudo ./resources/network.sh teardown 5

    - name: Jepsen log Summary
      if: ${{ always() }}
      run: tail -n 100 store/current/jepsen.log > store/current/tail-jepsen.log

    - name: Summary Artifact
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: jepsen-data-${{ matrix.workload }}-${{ matrix.nemesis }}-summary
        path: |
          store/dqlite*/**/results.edn
          store/dqlite*/**/latency-raw.png
          store/dqlite*/**/tail-jepsen.log
          !**/current/
          !**/latest/

    - name: Failure Artifact
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: jepsen-data-${{ matrix.workload }}-${{ matrix.nemesis }}-failure
        path: |
          store/dqlite*
          !**/current/
          !**/latest/
